import requests
import pandas as pd
import yfinance as yf
from datetime import datetime
import os
from colorama import Fore, Style, init

# Initialize colorama for Windows support
init()

# Load API key from environment variable
API_KEY = os.getenv("FRED_API_KEY", "358278a4ebd546c50212a3e7e65cbb3d")

def get_fed_interest_rates():
    """Fetch latest Fed interest rate data from FRED API"""
    try:
        url = f"https://api.stlouisfed.org/fred/series/observations?series_id=FEDFUNDS&api_key={API_KEY}&file_type=json"
        response = requests.get(url).json()
        latest_rate = float(response['observations'][-1]['value'])
        return latest_rate
    except:
        return "Error fetching Fed rates"

def get_yield_curve():
    """Fetch 10-year minus 2-year yield spread from FRED API"""
    try:
        url = f"https://api.stlouisfed.org/fred/series/observations?series_id=T10Y2Y&api_key={API_KEY}&file_type=json"
        response = requests.get(url).json()
        spread = float(response['observations'][-1]['value'])
        return spread
    except:
        return "Error fetching yield curve"

def get_latest_hedge_fund_moves():
    """Fetch recent hedge fund buys and sells from WhaleWisdom"""
    hedge_funds = ["BlackRock", "Berkshire Hathaway", "Vanguard", "Bridgewater"]
    hedge_movements = {}
    for fund in hedge_funds:
        try:
            url = f"https://whalewisdom.com/filer/{fund.lower().replace(' ', '-')}-llc"
            response = requests.get(url)
            if response.status_code == 200:
                hedge_movements[fund] = "Recent 13F filings available"
            else:
                hedge_movements[fund] = "Error fetching data"
        except:
            hedge_movements[fund] = "Error fetching data"
    return hedge_movements

def print_banner():
    """Prints the ASCII banner 'RECCTEST' with rainbow colors"""
    colors = [Fore.RED, Fore.YELLOW, Fore.GREEN, Fore.CYAN, Fore.BLUE, Fore.MAGENTA]
    ascii_text = [
        " ____  ____  ___  ___  ____  ____  ___  ____ ",
        "(  _ \( ___)/ __)/ __)(_  _)( ___)/ __)(_  _)",
        " )   / )__)( (__( (__   )(   )__) \__ \  )(  ",
        "(_)/ (_)(____)\___)\___) (__) (____)(___/ (__) "
    ]
    
    for i, line in enumerate(ascii_text):
        print(colors[i % len(colors)] + line + Style.RESET_ALL)

def run_recession_checklist():
    """Run all recession indicators and display results"""
    print_banner()
    print(f"Date: {datetime.today().strftime('%Y-%m-%d')}\n")
    
    fed_rate = get_fed_interest_rates()
    yield_curve = get_yield_curve()
    hedge_movements = get_latest_hedge_fund_moves()
    
    print(f"1Ô∏è‚É£ Fed Interest Rate: {fed_rate}% (Below 3% = Easy Money, Above 5% = Recession Risk)")
    print(f"2Ô∏è‚É£ Yield Curve Spread (10Y-2Y): {yield_curve} (Negative = Recession Signal)")
    
    print("\nüìä Hedge Fund Recent Moves:")
    for fund, movement in hedge_movements.items():
        print(f"   - {fund}: {movement}")
    
    print("\n======================================")
    
    input("\nPress Enter to exit...")

if __name__ == "__main__":
    run_recession_checklist()
